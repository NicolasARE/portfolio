name: Deploy Astro site to Pages

on:
  # Se déclenche sur les poussées ciblant la branche par défaut
  push:
    branches: ["main"]

  # Vous permet d'exécuter ce flux de travail manuellement depuis l'onglet Actions
  workflow_dispatch:

# Définit les autorisations du jeton GITHUB_TOKEN pour permettre le déploiement sur GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Autorise un seul déploiement concurrent, en sautant les exécutions en file d'attente entre l'exécution en cours et la dernière en file d'attente.
# Cependant, NE PAS annuler les exécutions en cours car nous voulons permettre à ces déploiements de production de se terminer.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # valeur par défaut lorsque vous n'utilisez pas de sous-dossiers
  # BUILD_PATH: "/ov"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
            exit 0
          else
            echo "Impossible de déterminer le gestionnaire de paquets"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Modifié de "20" à "14" pour correspondre à la version correcte
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/package-lock.json
      - name: Setup Pages
        id: pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          enable_cname: false # Vous pouvez ajuster cette option selon vos besoins
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: astro-site
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: astro-site
          path: ${{ env.BUILD_PATH }}/dist
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.BUILD_PATH }}/dist
